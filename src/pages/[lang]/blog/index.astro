---
import { Icon } from "astro-icon";
import {
  getPostsByLanguage,
  getOtherAvailableLanguages,
} from "~/utils/get-posts-by-language";
import { readingTime } from "~/utils/reading-time";
import Layout from "~/components/static/layout.astro";
import {
  getLangFromUrl,
  getLocalisedBlogLink,
  useTranslations,
} from "~/i18n/utils";
import NavbarLink from "~/components/static/navbar-link.astro";

export { getStaticPaths } from "~/i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const posts = await getPostsByLanguage();
const postsForLang = posts[lang].filter((post) => !post.data.draft);

const otherLangs = getOtherAvailableLanguages(lang, posts);
---

<Layout title={t("blog.title")}>
  <h1 class="mb-8 text-2xl font-bold tracking-tighter">{t("blog.heading")}</h1>
  {postsForLang.length === 0 && <p class="mb-4">{t("blog.empty")}</p>}
  {
    otherLangs.length !== 0 && (
      <p class="mt-2 flex items-center -space-x-2">
        {t("blog.other-languages")}
        {otherLangs.map(({ lang, amount }) => (
          <NavbarLink
            active={false}
            href={`/${lang}/blog`}
            title={lang + " | " + amount}
          />
        ))}
      </p>
    )
  }
  {
    postsForLang.map((post) => (
      <a
        class="mb-4 flex flex-col space-y-1"
        href={getLocalisedBlogLink(post.slug)}
      >
        <div class="flex w-full flex-col">
          <p class="tracking-tight text-neutral-900 dark:text-neutral-100">
            {post.data.title}
          </p>
          <p class="flex items-center gap-1 text-neutral-600 dark:text-neutral-400">
            <Icon name="tabler:clock" class="h-4 w-4 pb-0.5" />
            {readingTime(post.body)}&nbsp;{t("generic.reading-time")}
          </p>
        </div>
      </a>
    ))
  }
</Layout>
