---
import {
  getLangFromUrl,
  useTranslations,
  getPathWithoutLangFromUrl,
  getStaticPaths,
} from "~/i18n/utils";
import NavbarLink from "./navbar-link.astro";

const lang = getLangFromUrl(Astro.url);
const pagePath = getPathWithoutLangFromUrl(Astro.url);
const t = useTranslations(lang);

const isActive = (type: "home" | "blog") => {
  switch (type) {
    case "home": {
      return ["/", "", `/${lang}`, `/${lang}/`].includes(Astro.url.pathname);
    }
    case "blog":
    default: {
      return Astro.url.pathname.includes("/" + type);
    }
  }
};
---

<aside class="-ml-[8px] mb-16 tracking-tight">
  <div class="lg:sticky lg:top-20">
    <nav
      class="fade relative flex scroll-pr-6 flex-row items-start px-0 pb-0 md:relative md:overflow-auto"
      id="nav"
    >
      <div class="flex flex-row space-x-0 pr-10">
        <NavbarLink
          title={t("ui.nav.home")}
          href={"/" + lang}
          active={isActive("home")}
        />
        <NavbarLink
          title={t("ui.nav.blog")}
          href={`/${lang}/blog`}
          active={isActive("blog")}
        />
      </div>
      <div class="ml-auto flex">
        {
          getStaticPaths().map((path) => {
            const newPath = `/${path.params.lang}${
              pagePath.length === 0 ? "" : "/" + pagePath
            }`;
            const parts = newPath
              .split("/")
              .filter((part) => part.trim() !== "");
            return parts.length <= 2 ? (
              <NavbarLink
                title={path.params.lang}
                href={newPath}
                active={lang === path.params.lang}
              />
            ) : null;
          })
        }
      </div>
    </nav>
  </div>
</aside>
